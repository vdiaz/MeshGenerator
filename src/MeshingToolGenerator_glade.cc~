#include "config.h"
#include <gtkmmconfig.h>
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/image.h>
#include <gtkmm/stockid.h>
#include "MeshingToolGenerator_glade.hh"

GUIVentanaPrincipal_glade::GUIVentanaPrincipal_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  GUIVentanaPrincipal = this;
   gmm_data = new GlademmData(get_accel_group());
   nuevo1 = NULL;
   abrir1 = NULL;
   separatormenuitem1 = NULL;
   salir1 = NULL;
   menuitem1_menu = Gtk::manage(new class Gtk::Menu());
   menuitem1 = NULL;
   cortar1 = NULL;
   copiar1 = NULL;
   pegar1 = NULL;
   borrar1 = NULL;
   menuitem2_menu = Gtk::manage(new class Gtk::Menu());
   menuitem2 = NULL;
   image87 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-select-color"), Gtk::IconSize(1)));
   distribuir_hormona1 = NULL;
   separador5 = NULL;
   image88 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-convert"), Gtk::IconSize(1)));
   image89 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-preferences"), Gtk::IconSize(1)));
   image90 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-zoom-out"), Gtk::IconSize(1)));
   image91 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-zoom-fit"), Gtk::IconSize(1)));
   separador4 = NULL;
   image92 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-info"), Gtk::IconSize(1)));
   informacion1 = NULL;
   malla1_menu = Gtk::manage(new class Gtk::Menu());
   malla1 = NULL;
   mostrar_caras1 = NULL;
   mostrar_arcos1 = NULL;
   mostrar_colores_segun_concentracion1 = NULL;
   separador3 = NULL;
   image93 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-rewind"), Gtk::IconSize(1)));
   enlentecer_animacion1 = NULL;
   image94 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-stop"), Gtk::IconSize(1)));
   detener_animacion1 = NULL;
   image95 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-pause"), Gtk::IconSize(1)));
   pausar_animacion1 = NULL;
   image96 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-play"), Gtk::IconSize(1)));
   iniciar_animacion1 = NULL;
   image97 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-forward"), Gtk::IconSize(1)));
   apurar_animacion1 = NULL;
   menuitem3_menu = Gtk::manage(new class Gtk::Menu());
   menuitem3 = NULL;
   acerca_de1 = NULL;
   menuitem4_menu = Gtk::manage(new class Gtk::Menu());
   menuitem4 = NULL;
   menubar1 = Gtk::manage(new class Gtk::MenuBar());
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonNuevo = Gtk::manage(new class Gtk::ToolButton(Gtk::StockID("gtk-new")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonAbrir = Gtk::manage(new class Gtk::ToolButton(Gtk::StockID("gtk-open")));
#endif //

#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   separatortoolitem1 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   
   toolbar1 = Gtk::manage(new class Gtk::Toolbar());
   vboxDrawingArea = Gtk::manage(new class Gtk::VBox(false, 0));
   
   Gtk::Image *toolbuttonEnlentecer_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-rewind"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonEnlentecer = Gtk::manage(new class Gtk::ToolButton(*toolbuttonEnlentecer_img, ""));
#endif //
   
   Gtk::Image *toolbuttonDetenerAnimacion_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-stop"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonDetenerAnimacion = Gtk::manage(new class Gtk::ToolButton(*toolbuttonDetenerAnimacion_img, "DetenerAnimacion"));
#endif //
   
   Gtk::Image *toolbuttonPausarAnimacion_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-pause"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonPausarAnimacion = Gtk::manage(new class Gtk::ToolButton(*toolbuttonPausarAnimacion_img, ""));
#endif //
   
   Gtk::Image *toolbuttonIniciarAnimacion_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-play"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonIniciarAnimacion = Gtk::manage(new class Gtk::ToolButton(*toolbuttonIniciarAnimacion_img, "Iniciar Animacion"));
#endif //
   
   Gtk::Image *toolbuttonApurar_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-forward"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonApurar = Gtk::manage(new class Gtk::ToolButton(*toolbuttonApurar_img, ""));
#endif //
   toolbarControlesAnimacion = Gtk::manage(new class Gtk::Toolbar());
   vboxVisualizador = Gtk::manage(new class Gtk::VBox(false, 0));
   alignmentVisualizador = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   label1 = Gtk::manage(new class Gtk::Label("<b>Visualizador</b>"));
   frame1 = Gtk::manage(new class Gtk::Frame());
   textviewLog = Gtk::manage(new class Gtk::TextView());
   scrolledwindow1 = Gtk::manage(new class Gtk::ScrolledWindow());
   alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   label2 = Gtk::manage(new class Gtk::Label("<b>Log</b>"));
   frame2 = Gtk::manage(new class Gtk::Frame());
   statusbar1 = Gtk::manage(new class Gtk::Statusbar());
   vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-new")));
   nuevo1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-open")));
   abrir1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
      
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separatormenuitem1 = (Gtk::MenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   salir1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-cut")));
   cortar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-copy")));
   copiar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-paste")));
   pegar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-delete")));
   borrar1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   malla1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Distribuir Hormona...", *image87));
   distribuir_hormona1 = (Gtk::ImageMenuItem *)&malla1_menu->items().back();
   
   malla1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separador5 = (Gtk::MenuItem *)&malla1_menu->items().back();
   
   malla1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separador4 = (Gtk::MenuItem *)&malla1_menu->items().back();
   
   malla1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Informacion...", *image92));
   informacion1 = (Gtk::ImageMenuItem *)&malla1_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem("Mostrar caras"));
   mostrar_caras1 = (Gtk::CheckMenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem("Mostrar arcos"));
   mostrar_arcos1 = (Gtk::CheckMenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem("Mostrar colores segun concentracion"));
   mostrar_colores_segun_concentracion1 = (Gtk::CheckMenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separador3 = (Gtk::MenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Enlentecer Animacion", *image93));
   enlentecer_animacion1 = (Gtk::ImageMenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Detener Animacion", *image94));
   detener_animacion1 = (Gtk::ImageMenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Pausar Animacion", *image95));
   pausar_animacion1 = (Gtk::ImageMenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Iniciar Animacion", *image96));
   iniciar_animacion1 = (Gtk::ImageMenuItem *)&menuitem3_menu->items().back();
   
   menuitem3_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem("Apurar Animacion", *image97));
   apurar_animacion1 = (Gtk::ImageMenuItem *)&menuitem3_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-about")));
   acerca_de1 = (Gtk::ImageMenuItem *)&menuitem4_menu->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Archivo", *menuitem1_menu));
   menuitem1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Editar", *menuitem2_menu));
   menuitem2 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Malla", *malla1_menu));
   malla1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Ver", *menuitem3_menu));
   menuitem3 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("A_yuda", *menuitem4_menu));
   menuitem4 = (Gtk::MenuItem *)&menubar1->items().back();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->append(*toolbuttonNuevo);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::StockElem(Gtk::StockID("gtk-new"), Gtk::Toolbar_Helpers::Callback0()));
   toolbuttonNuevo = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->append(*toolbuttonAbrir);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::StockElem(Gtk::StockID("gtk-open"), Gtk::Toolbar_Helpers::Callback0()));
   toolbuttonAbrir = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //

#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->append(*separatortoolitem1);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //

#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbarControlesAnimacion->append(*toolbuttonEnlentecer);
#else //
   
   
   toolbarControlesAnimacion->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("", *toolbuttonEnlentecer_img, Gtk::Toolbar_Helpers::Callback0()));
   toolbuttonEnlentecer = static_cast<Gtk::Button *>(toolbarControlesAnimacion->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbarControlesAnimacion->append(*toolbuttonDetenerAnimacion);
#else //
   
   
   toolbarControlesAnimacion->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("DetenerAnimacion", *toolbuttonDetenerAnimacion_img, Gtk::Toolbar_Helpers::Callback0()));
   toolbuttonDetenerAnimacion = static_cast<Gtk::Button *>(toolbarControlesAnimacion->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbarControlesAnimacion->append(*toolbuttonPausarAnimacion);
#else //
   
   
   toolbarControlesAnimacion->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("", *toolbuttonPausarAnimacion_img, Gtk::Toolbar_Helpers::Callback0()));
   toolbuttonPausarAnimacion = static_cast<Gtk::Button *>(toolbarControlesAnimacion->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbarControlesAnimacion->append(*toolbuttonIniciarAnimacion);
#else //
   
   
   toolbarControlesAnimacion->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Iniciar Animacion", *toolbuttonIniciarAnimacion_img, Gtk::Toolbar_Helpers::Callback0()));
   toolbuttonIniciarAnimacion = static_cast<Gtk::Button *>(toolbarControlesAnimacion->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbarControlesAnimacion->append(*toolbuttonApurar);
#else //
   
   
   toolbarControlesAnimacion->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("", *toolbuttonApurar_img, Gtk::Toolbar_Helpers::Callback0()));
   toolbuttonApurar = static_cast<Gtk::Button *>(toolbarControlesAnimacion->tools().back().get_widget());
#endif //
   image87->set_alignment(0.5,0.5);
   image87->set_padding(0,0);
   image88->set_alignment(0.5,0.5);
   image88->set_padding(0,0);
   image89->set_alignment(0.5,0.5);
   image89->set_padding(0,0);
   image90->set_alignment(0.5,0.5);
   image90->set_padding(0,0);
   image91->set_alignment(0.5,0.5);
   image91->set_padding(0,0);
   image92->set_alignment(0.5,0.5);
   image92->set_padding(0,0);
   mostrar_caras1->set_active(true);
   mostrar_arcos1->set_active(false);
   mostrar_colores_segun_concentracion1->set_active(true);
   image93->set_alignment(0.5,0.5);
   image93->set_padding(0,0);
   image94->set_alignment(0.5,0.5);
   image94->set_padding(0,0);
   image95->set_alignment(0.5,0.5);
   image95->set_padding(0,0);
   image96->set_alignment(0.5,0.5);
   image96->set_padding(0,0);
   image97->set_alignment(0.5,0.5);
   image97->set_padding(0,0);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonNuevo->set_visible_horizontal(true);
   toolbuttonNuevo->set_visible_vertical(true);
   toolbuttonNuevo->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonAbrir->set_visible_horizontal(true);
   toolbuttonAbrir->set_visible_vertical(true);
   toolbuttonAbrir->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   separatortoolitem1->set_visible_horizontal(true);
   separatortoolitem1->set_visible_vertical(true);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
   toolbar1->set_tooltips(true);
   toolbar1->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar1->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->set_show_arrow(true);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonEnlentecer->set_visible_horizontal(true);
   toolbuttonEnlentecer->set_visible_vertical(true);
   toolbuttonEnlentecer->set_is_important(false);
#endif //
   toolbuttonEnlentecer_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonDetenerAnimacion->set_visible_horizontal(true);
   toolbuttonDetenerAnimacion->set_visible_vertical(true);
   toolbuttonDetenerAnimacion->set_is_important(false);
#endif //
   toolbuttonDetenerAnimacion_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonPausarAnimacion->set_visible_horizontal(true);
   toolbuttonPausarAnimacion->set_visible_vertical(true);
   toolbuttonPausarAnimacion->set_is_important(false);
#endif //
   toolbuttonPausarAnimacion_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonIniciarAnimacion->set_visible_horizontal(true);
   toolbuttonIniciarAnimacion->set_visible_vertical(true);
   toolbuttonIniciarAnimacion->set_is_important(false);
#endif //
   toolbuttonIniciarAnimacion_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbuttonApurar->set_visible_horizontal(true);
   toolbuttonApurar->set_visible_vertical(true);
   toolbuttonApurar->set_is_important(false);
#endif //
   toolbuttonApurar_img->show();
   toolbarControlesAnimacion->set_tooltips(true);
   toolbarControlesAnimacion->set_toolbar_style(Gtk::TOOLBAR_ICONS);
   toolbarControlesAnimacion->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbarControlesAnimacion->set_show_arrow(true);
#endif //
   vboxVisualizador->pack_start(*vboxDrawingArea);
   vboxVisualizador->pack_start(*toolbarControlesAnimacion, Gtk::PACK_SHRINK, 0);
   alignmentVisualizador->add(*vboxVisualizador);
   label1->set_alignment(0.5,0.5);
   label1->set_padding(0,0);
   label1->set_justify(Gtk::JUSTIFY_LEFT);
   label1->set_line_wrap(false);
   label1->set_use_markup(true);
   label1->set_selectable(false);
   frame1->set_border_width(5);
   frame1->set_shadow_type(Gtk::SHADOW_NONE);
   frame1->set_label_align(0,0.5);
   frame1->add(*alignmentVisualizador);
   frame1->set_label_widget(*label1);
   textviewLog->set_flags(Gtk::CAN_FOCUS);
   textviewLog->set_editable(false);
   textviewLog->set_cursor_visible(true);
   textviewLog->set_pixels_above_lines(0);
   textviewLog->set_pixels_below_lines(0);
   textviewLog->set_pixels_inside_wrap(0);
   textviewLog->set_left_margin(0);
   textviewLog->set_right_margin(0);
   textviewLog->set_indent(0);
   textviewLog->set_wrap_mode(Gtk::WRAP_NONE);
   textviewLog->set_justification(Gtk::JUSTIFY_LEFT);
   scrolledwindow1->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow1->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow1->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow1->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow1->add(*textviewLog);
   alignment2->add(*scrolledwindow1);
   label2->set_alignment(0.5,0.5);
   label2->set_padding(0,0);
   label2->set_justify(Gtk::JUSTIFY_LEFT);
   label2->set_line_wrap(false);
   label2->set_use_markup(true);
   label2->set_selectable(false);
   frame2->set_border_width(5);
   frame2->set_shadow_type(Gtk::SHADOW_NONE);
   frame2->set_label_align(0,0.5);
   frame2->add(*alignment2);
   frame2->set_label_widget(*label2);
   vbox1->pack_start(*menubar1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*toolbar1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*frame1);
   vbox1->pack_start(*frame2, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*statusbar1, Gtk::PACK_SHRINK, 0);
   GUIVentanaPrincipal->set_title("Tree Growth Simulator");
   GUIVentanaPrincipal->set_default_size(800,600);
   GUIVentanaPrincipal->set_modal(false);
   GUIVentanaPrincipal->property_window_position().set_value(Gtk::WIN_POS_NONE);
   GUIVentanaPrincipal->set_resizable(true);
   GUIVentanaPrincipal->property_destroy_with_parent().set_value(false);
   GUIVentanaPrincipal->add(*vbox1);
   nuevo1->show();
   abrir1->show();
   separatormenuitem1->show();
   salir1->show();
   menuitem1->show();
   cortar1->show();
   copiar1->show();
   pegar1->show();
   borrar1->show();
   menuitem2->show();
   image87->show();
   distribuir_hormona1->show();
   separador5->show();
   image88->show();
   image89->show();
   image90->show();
   image91->show();
   separador4->show();
   image92->show();
   informacion1->show();
   malla1->show();
   mostrar_caras1->show();
   mostrar_arcos1->show();
   mostrar_colores_segun_concentracion1->show();
   separador3->show();
   image93->show();
   enlentecer_animacion1->show();
   image94->show();
   detener_animacion1->show();
   image95->show();
   pausar_animacion1->show();
   image96->show();
   iniciar_animacion1->show();
   image97->show();
   apurar_animacion1->show();
   menuitem3->show();
   acerca_de1->show();
   menuitem4->show();
   menubar1->show();
   toolbuttonNuevo->show();
   toolbuttonAbrir->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   separatortoolitem1->show();
#endif //
   toolbar1->show();
   vboxDrawingArea->show();
   toolbuttonEnlentecer->show();
   toolbuttonDetenerAnimacion->show();
   toolbuttonPausarAnimacion->show();
   toolbuttonIniciarAnimacion->show();
   toolbuttonApurar->show();
   toolbarControlesAnimacion->show();
   vboxVisualizador->show();
   alignmentVisualizador->show();
   label1->show();
   frame1->show();
   textviewLog->show();
   scrolledwindow1->show();
   alignment2->show();
   label2->show();
   frame2->show();
   statusbar1->show();
   vbox1->show();
   GUIVentanaPrincipal->show();
   nuevo1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_nuevo1_activate), false);
   abrir1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_abrir1_activate), false);
   salir1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_salir1_activate), false);
   cortar1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_cortar1_activate), false);
   copiar1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_copiar1_activate), false);
   pegar1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_pegar1_activate), false);
   borrar1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_borrar1_activate), false);
   distribuir_hormona1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_distribuir_hormona1_activate), false);
   informacion1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_informacion1_activate), false);
   mostrar_caras1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_mostrar_caras1_activate), false);
   mostrar_arcos1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_mostrar_arcos1_activate), false);
   mostrar_colores_segun_concentracion1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_mostrar_colores_segun_concentracion1_activate), false);
   enlentecer_animacion1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_enlentecer_animacion1_activate), false);
   detener_animacion1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_detener_animacion1_activate), false);
   pausar_animacion1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_pausar_animacion1_activate), false);
   iniciar_animacion1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_iniciar_animacion1_activate), false);
   apurar_animacion1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_apurar_animacion1_activate), false);
   acerca_de1->signal_activate().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_acerca_de1_activate), false);
   toolbuttonNuevo->signal_clicked().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_toolbuttonNuevo_clicked), false);
   toolbuttonAbrir->signal_clicked().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_toolbuttonAbrir_clicked), false);
   toolbuttonEnlentecer->signal_clicked().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_enlentecer_animacion1_activate), false);
   toolbuttonDetenerAnimacion->signal_clicked().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_detener_animacion1_activate), false);
   toolbuttonPausarAnimacion->signal_clicked().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_pausar_animacion1_activate), false);
   toolbuttonIniciarAnimacion->signal_clicked().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_iniciar_animacion1_activate), false);
   toolbuttonApurar->signal_clicked().connect(sigc::mem_fun(*this, &GUIVentanaPrincipal_glade::on_apurar_animacion1_activate), false);
}

GUIVentanaPrincipal_glade::~GUIVentanaPrincipal_glade()
{  delete gmm_data;
}
